// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"spkvpenergy/ocapi/models"
)

// AuthReader is a Reader for the Auth structure.
type AuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAuthDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthOK creates a AuthOK with default headers values
func NewAuthOK() *AuthOK {
	return &AuthOK{}
}

/* AuthOK describes a response with status code 200, with default header values.

OK
*/
type AuthOK struct {
	Payload *models.AuthResp
}

func (o *AuthOK) Error() string {
	return fmt.Sprintf("[POST /auth/open][%d] authOK  %+v", 200, o.Payload)
}
func (o *AuthOK) GetPayload() *models.AuthResp {
	return o.Payload
}

func (o *AuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthResp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthDefault creates a AuthDefault with default headers values
func NewAuthDefault(code int) *AuthDefault {
	return &AuthDefault{
		_statusCode: code,
	}
}

/* AuthDefault describes a response with status code -1, with default header values.

unexpected error
*/
type AuthDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// Code gets the status code for the auth default response
func (o *AuthDefault) Code() int {
	return o._statusCode
}

func (o *AuthDefault) Error() string {
	return fmt.Sprintf("[POST /auth/open][%d] auth default  %+v", o._statusCode, o.Payload)
}
func (o *AuthDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *AuthDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
